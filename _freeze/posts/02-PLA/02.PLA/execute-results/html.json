{
  "hash": "f18c99777f1de1e7d5a8ea6e51745b5d",
  "result": {
    "markdown": "---\ntitle: 构造感知机模型\ncategories: [R, ML]\ndate: \"2024-03-05\"\n---\n\n\n构造感知机模型\n\n## PLA\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\ntheme_set(theme_minimal())\nknitr::opts_chunk$set(\n  out.width = \"80%\",\n  fig.align = \"center\",\n  dev = \"ragg_png\"\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(123)\nn = 2000\ndf <- tibble(\n  id = 1:n,\n  x1 = rnorm(n),\n  x2 = rnorm(n),\n  y = if_else(2*x1 + 3*x2 >= 0, 1, -1)\n) %>% \n  arrange(id)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,000 × 4\n      id      x1     x2     y\n   <int>   <dbl>  <dbl> <dbl>\n 1     1 -0.560  -0.512    -1\n 2     2 -0.230   0.237     1\n 3     3  1.56   -0.542     1\n 4     4  0.0705  1.22      1\n 5     5  0.129   0.174     1\n 6     6  1.72   -0.615     1\n 7     7  0.461  -1.81     -1\n 8     8 -1.27   -0.644    -1\n 9     9 -0.687   2.05      1\n10    10 -0.446  -0.561    -1\n# ℹ 1,990 more rows\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf %>% \n  ggplot(aes(x1, x2, color = as_factor(y))) +\n  geom_point(alpha = 0.5) +\n  labs(\n    x = latex2exp::TeX(\"$x_1$\"),\n    y = latex2exp::TeX(\"$x_2$\"),\n    color = \"y\"\n  ) +\n  scale_color_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npla_near <- function(df, total_times){\n  errors = 0\n  n = 0\n  w = c(0, 0)\n  ddd = df %>% \n  mutate(score = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(w %*% c(x, y) >= 0, 1, -1))) %>% \n  filter(score != y)\n  while(nrow(ddd) > 0 & n < total_times) {\n    # i = sample(1:nrow(ddd), size = 1)\n    # x = c(ddd$x1[[i]], ddd$x2[[i]])\n    # y = ddd$y[[i]]\n    x = c(ddd$x1[[1]], ddd$x2[[1]])\n    y = ddd$y[[1]]\n    w = w + y*x\n    n = n + 1\n    errors[[n]] = nrow(ddd)\n    ddd = df %>% \n  mutate(score = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(w %*% c(x, y) >= 0, 1, -1))) %>% \n  filter(y != score)\n  }\n  return(list(w = w, n = n, errors = errors))\n}\n\npla_random <- function(df, total_times){\n  errors = rep(NA, total_times)\n  n = 0\n  w = c(0, 0)\n  ddd = df %>% \n  mutate(score = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(w %*% c(x, y) >= 0, 1, -1))) %>% \n  filter(score != y)\n  while(nrow(ddd) > 0 & n < total_times) {\n    i = sample(1:nrow(ddd), size = 1)\n    x = c(ddd$x1[[i]], ddd$x2[[i]])\n    y = ddd$y[[i]]\n    w = w + y*x\n    n = n + 1\n    errors[[n]] = nrow(ddd)\n    ddd = df %>% \n  mutate(score = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(w %*% c(x, y) >= 0, 1, -1))) %>% \n  filter(y != score)\n  }\n  return(list(w = w, n = n, errors = errors))\n}\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='02.PLA_cache/html/unnamed-chunk-5_a94eefd9cec69c06971efe97f3bbdaff'}\n\n```{.r .cell-code}\nT_times <- 500\nrrr_near <- pla_near(df, T_times)\nrrr_random <- pla_random(df, T_times)\ndf_result <- tibble(\n  n = 1:T_times,\n  near_errors = rrr_near$errors,\n  random_errors = rrr_random$errors\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_result %>% \n  pivot_longer(\n    cols = -n\n  ) %>% \n  ggplot(aes(n, value, color = name)) +\n  geom_path(alpha = 0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 202 rows containing missing values or values outside the scale range\n(`geom_path()`).\n```\n:::\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf %>% \n  mutate(score_near = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(rrr_near$w %*% c(x, y) >= 0, 1, -1)),\n         score_random = pmap_dbl(list(x1, x2), .f = \\(x, y) if_else(rrr_random$w %*% c(x, y) >= 0, 1, -1))) %>% \n  filter(score_random != y | score_near != y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 6\n      id      x1      x2     y score_near score_random\n   <int>   <dbl>   <dbl> <dbl>      <dbl>        <dbl>\n 1   325 -0.523   0.336     -1          1           -1\n 2   334  1.52   -1.01       1         -1            1\n 3   394 -0.829   0.546     -1          1           -1\n 4   711  1.06   -0.667      1         -1            1\n 5   741  0.712  -0.468      1         -1            1\n 6   847 -0.644   0.421     -1          1           -1\n 7   854 -1.16    0.754     -1          1           -1\n 8  1094  1.02   -0.640      1         -1            1\n 9  1111 -0.625   0.411     -1          1           -1\n10  1151 -0.0570  0.0372    -1          1           -1\n11  1268  1.43   -0.929      1         -1            1\n12  1304  0.354  -0.228      1         -1            1\n13  1448 -1.99    1.28      -1          1           -1\n14  1449  0.551  -0.358      1         -1            1\n15  1804  1.26   -0.801      1         -1            1\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nf_1 = function(x){\nx * rrr_near$w[[1]] / (-rrr_near$w[[2]])\n}\n\nf_2 = function(x){\nx * rrr_random$w[[1]] / (-rrr_random$w[[2]])\n}\n\ndf %>% \n  ggplot(aes(x1, x2)) +\n  geom_point(aes(color = as_factor(y))) +\n  geom_function(fun = f_1, lty = 2, color = \"red\") +\n  geom_function(fun = f_2, lty = 2, color = \"blue\") +\n  labs(color = \"y\")\n```\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n## modify PLA\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(111)\nn = 2000\ndf <- tibble(\n  id = 1:n,\n  x1 = rnorm(n),\n  x2 = rnorm(n),\n  e = rnorm(n),\n  y = if_else(2*x1 + 3*x2 + e >= 0, 1, -1)\n) %>% \n  arrange(id)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,000 × 5\n      id     x1      x2      e     y\n   <int>  <dbl>   <dbl>  <dbl> <dbl>\n 1     1  0.235  1.13    0.141     1\n 2     2 -0.331  0.858  -0.600     1\n 3     3 -0.312 -0.574  -1.06     -1\n 4     4 -2.30   1.38    1.89      1\n 5     5 -0.171 -0.575  -0.657    -1\n 6     6  0.140 -0.593  -1.15     -1\n 7     7 -1.50  -1.42   -1.10     -1\n 8     8 -1.01   0.0288 -1.44     -1\n 9     9 -0.948 -0.361   0.823    -1\n10    10 -0.494  0.508   0.147     1\n# ℹ 1,990 more rows\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf %>% \n  ggplot(aes(x1, x2, color = as_factor(y))) +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npla_best <- function(df, total_times){\n  n = 0\n  w = c(0,0)\n  ws = list()\n  errors = nrow(df)\n  while (last(errors) > 0 & n < total_times) {\n    n = n + 1\n    ddd = df %>% \n    mutate(score = pmap_dbl(list(x1, x2), \n                            \\(x, y) if_else((w %*% c(x, y)) >= 0, 1, -1))) %>% \n    filter(score != y)\n    i = sample(1:nrow(ddd), size = 1)\n    errors[[n]] = nrow(ddd)\n    x = c(ddd$x1[[i]], ddd$x2[[i]])\n    y = ddd$y[[i]]\n    w = w + y*x\n    ws[[n]] = w\n  }\n  return(list(ws = ws, n = n, errors = errors))\n}\n\npla_modify <- function(df, total_times, w = c(0, 0)){\n  n = 0\n  #ws = list()\n  errors = nrow(df)\n  while (last(errors) > 0 & n < total_times) {\n    n = n + 1\n    # ddd = df %>% \n    #   mutate(score = pmap_dbl(list(x1, x2), \n    #                           \\(x, y) if_else((w %*% c(x, y)) >= 0, 1, -1))) %>% \n    #   filter(score != y)\n    \n    w_list = pmap(df, \n                  \\(x1, x2, y, ...) w + y * c(x1, x2)) %>% \n      sample(size = min(floor(0.1 * nrow(df)), 100))\n    \n    n_errors = map_dbl(w_list, \\(x) sum(pmap_dbl(df, \\(x1, x2, ...) sign(c(x1, x2) %*% x)) != df$y))\n    \n    min_errors = min(n_errors)\n    w_list_min_e = w_list[[which.min(n_errors)]]\n    if (min_errors <= last(errors)) {\n      w = w_list_min_e\n      errors[[n]] = min_errors\n    }else{\n      w = w\n      errors[[n]] = last(errors)\n    }\n    if (n>20) {\n      if (errors[[n-20]] == errors[[n]]){\n        break\n      }\n    }\n  }\n  return(list(w = w, n = n, errors = errors))\n}\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='02.PLA_cache/html/unnamed-chunk-12_e90faec13a7624ddf029103c7d44716e'}\n\n```{.r .cell-code}\ntotal_times <-  88\nrrr_best <- pla_best(df, total_times)\nrrr_modify <- pla_modify(df, total_times)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_result <- tibble(\n  n = 1:total_times,\n  errors_modify = c(rrr_modify$errors, rep(NA, total_times - length(rrr_modify$errors))),\n  errors_best = rrr_best$errors\n)\n\ndf_result %>% \n  pivot_longer(-n) %>% \n  ggplot(aes(n, value, color = name)) +\n  geom_line(linewidth = 1, alpha = 0.5) +\n  geom_point(alpha = 0.5) +\n  coord_cartesian(ylim = c(100, 300))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 59 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 59 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw <- rrr_best$ws[[which.min(rrr_best$errors)]]\nf_3 <- function(x){\nx * w[[1]] / (-w[[2]])\n}\n\nf_4 <- function(x){\nx * rrr_modify$w[[1]] / (-rrr_modify$w[[2]])\n}\n\ndf %>% \n  mutate(score = pmap_dbl(df, \\(x1, x2, ...) sign(c(x1, x2) %*% rrr_modify$w)),\n         alpha = if_else(score == y, 0.25, 1)) %>% \n  ggplot(aes(x1, x2)) +\n  geom_point(aes(color = as_factor(y), alpha = alpha)) +\n  geom_function(fun = f_3, lty = 2, color = \"purple\") +\n  geom_function(fun = f_4, lty = 2, color = \"skyblue\") +\n  labs(color = \"y\") +\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nw0 <- c(2, 3)\nw0_erors <- df %>% \n  mutate(score = pmap_dbl(list(x1, x2), \n                            \\(x, y) if_else((w0 %*% c(x, y)) >= 0, 1, -1))) %>% \n  filter(score != y) %>% \n  nrow()\n\npla_best_errors <- min(rrr_best$errors)\npla_modify_errors <- last(rrr_modify$errors)\ntibble(\n  w0_erors,\n  pla_best_errors,\n  pla_modify_errors\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  w0_erors pla_best_errors pla_modify_errors\n     <int>           <int>             <dbl>\n1      134             129               127\n```\n:::\n:::\n\n\n\n## linear regression and modify PLA\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npla_modify <- function(df, total_times, w = c(0, 0, 0)){\n  n = 0\n  #ws = list()\n  errors = nrow(df)\n  while (last(errors) > 0 & n < total_times) {\n    n = n + 1\n    # ddd = df %>% \n    #   mutate(score = pmap_dbl(list(x1, x2), \n    #                           \\(x, y) if_else((w %*% c(x, y)) >= 0, 1, -1))) %>% \n    #   filter(score != y)\n    \n    w_list = pmap(df, \n                  \\(x1, x2, y, ...) w + y * c(1, x1, x2)) %>% \n      sample(size = min(floor(0.1 * nrow(df)), 100))\n    \n    n_errors = map_dbl(w_list, \\(x) sum(pmap_dbl(df, \\(x1, x2, ...) sign(c(1, x1, x2) %*% x)) != df$y))\n    \n    min_errors = min(n_errors)\n    w_list_min_e = w_list[[which.min(n_errors)]]\n    if (min_errors <= last(errors)) {\n      w = w_list_min_e\n      errors[[n]] = min_errors\n    }else{\n      w = w\n      errors[[n]] = last(errors)\n    }\n    if (n>20) {\n      if (errors[[n-20]] == errors[[n]]){\n        break\n      }\n    }\n  }\n  return(list(w = w, n = n, errors = errors))\n}\n\n\nreg_pla <- function(df, formula, total_times){\n  fit <- lm(formula, data = df)\n  pla_modify(df, total_times, w = fit$coefficients)\n}\n```\n:::\n\n::: {.cell layout-align=\"center\" hash='02.PLA_cache/html/unnamed-chunk-17_93db528217414d15d710527ff6e951a8'}\n\n```{.r .cell-code}\ntotal_times <-  88\nformula <- formula(y ~ x1 + x2)\nmicrobenchmark::microbenchmark(\n  rrr_modify_2 <- pla_modify(df, total_times),\n  rrr_reg_pla <- reg_pla(df, formula, total_times),\n  times = 1\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnit: seconds\n                                             expr      min       lq     mean\n      rrr_modify_2 <- pla_modify(df, total_times) 15.22693 15.22693 15.22693\n rrr_reg_pla <- reg_pla(df, formula, total_times) 14.08558 14.08558 14.08558\n   median       uq      max neval\n 15.22693 15.22693 15.22693     1\n 14.08558 14.08558 14.08558     1\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_result <- tibble(\n  n = 1:total_times,\n  errors_modify = c(rrr_modify_2$errors, rep(NA, total_times - length(rrr_modify_2$errors))),\n  errors_reg = c(rrr_reg_pla$errors, rep(NA, total_times - length(rrr_reg_pla$errors)))\n)\n\ndf_result %>% \n  pivot_longer(-n) %>% \n  ggplot(aes(n, value, color = name)) +\n  geom_line(linewidth = 1, alpha = 0.5) +\n  geom_point(alpha = 0.5) +\n  coord_cartesian(ylim = c(100, 300), xlim = c(0, 50))\n```\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nf_modify <- function(x){\nrrr_modify_2$w[[1]] + x * rrr_modify$w[[2]] / (-rrr_modify$w[[3]])\n}\n\nf_reg <- function(x){\nrrr_reg_pla$w[[1]] + x * rrr_reg_pla$w[[2]] / (-rrr_reg_pla$w[[3]])\n}\n\ndf %>% \n  mutate(score = pmap_dbl(df, \\(x1, x2, ...) sign(c(1, x1, x2) %*% rrr_reg_pla$w)),\n         alpha = if_else(score == y, 0.25, 1)) %>% \n  ggplot(aes(x1, x2)) +\n  geom_point(aes(color = as_factor(y), alpha = alpha)) +\n  geom_function(fun = f_reg, lty = 2, color = \"purple\") +\n  geom_function(fun = f_modify, lty = 2, color = \"skyblue\") +\n  labs(color = \"y\") +\n  coord_equal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Computation failed in `stat_function()`.\nCaused by error in `rrr_modify$w[[3]]`:\n! subscript out of bounds\n```\n:::\n\n::: {.cell-output-display}\n![](02.PLA_files/figure-html/unnamed-chunk-19-1.png){fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntibble(\n  err_modify = last(rrr_modify_2$errors),\n  err_reg_pla = last(rrr_reg_pla$errors)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  err_modify err_reg_pla\n       <dbl>       <dbl>\n1        129         130\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}