---
title: 从pdf读取表格
date: "2024-04-10"
categories: [R]
---

```{r}
#| label: setup
#| message: false

library(tidyverse)
library(docxtractr)
```

最近看到烟草局招生，想报个名，结果发现招聘信息表都放在pdf里，不方便做筛选，于是想用R来提取数据框并处理一下。

# 提取pdf中数据框的常见方案

回顾用R从pdf中读取数据的常见方案及其弊端：

1.  [用`pdftools`读取文本，再整理成数据框](https://tellingstorieswithdata.com/07-gather.html#pdfs)：
    -   实际上就是用正则表达式清洗文本数据，步骤比较繁琐。

    -   表格页数较多或者表格的格式较复杂的时候容易出错。



2.  [用`tabulizer`从pdf中提取数据框](https://www.r-bloggers.com/2019/09/pdf-scraping-in-r-with-tabulizer/)：

    -   需要配置java，非常麻烦。

    -   提取的结果不准确。

3.  [连接pdftables调用api](https://cran.r-project.org/web/packages/pdftables/index.html)：

    -   需要在网站上注册，每次使用还需要输入账号和密码。
    -   提取的结果不准确。



下面这个表格存在单元格内换行的情况，用`pdftools`根本就无从下手，用`tabulizer`或`pdftables`也容易出错。

```{r}
#| echo: false
#| out-width: 100%
knitr::include_graphics("071052144z0f.pdf")
```


# 用`docxtractr`提取

我发现了一个包[`doxtractr`](https://gitlab.com/hrbrmstr/docxtractr)可以很轻松的提取word中的数据，对于一些格式复杂的pdf可以转换成word，然后用`doxtractr`包读取数据。

为什么pdf转换成word后就能准确提取表格了呢？我猜测这是因为pdf是一种矢量结构，不具备并不会用code注明哪些元素是表格哪些元素是文字，pdf中的元素只有位置的区别而没有属性的区别。而word会标明哪些元素是表格，就像在编程里声明了表格这种class，因此容易提取。

将pdf用word打开并另存为word后，用`docxtratr`包的`read_docx()`读入

```{r}
docs <- read_docx("071052144z0f.docx")
docs
```

可以看到文档中的表格被自动识别，并且推断出的表格的表头都是正确的。


使用`docx_extract_tbl()`提取表格

```{r}
docx_extract_tbl(docs, tbl_number = 1)
```


这里我们的pdf有27页，每页的表格都是固定的表头，可以用`docx_extract_all_tbls()`提取全部表格再按行合并。

```{r}
tbls <- docx_extract_all_tbls(docs)
recruitment <- do.call(what = bind_rows, args = tbls)
recruitment
```





